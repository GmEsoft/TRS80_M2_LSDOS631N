;SVCEQU/ASM - LS-DOS 6.x;*LIST OFF;;	System Entrys/Equates - LS-DOS version 6.3;;	ASCII Control equivalences;NUL	EQU	0			; FillerSOH	EQU	1			; Start of headingSTX	EQU	2			; Start of textETX	EQU	3			; End of textEOT	EQU	4			; End of transmissionENQ	EQU	5			; EnquiryACK	EQU	6			; AcknowledgeBEL	EQU	7			; BellBS	EQU	8			; BackspaceHT	EQU	9			; Horizontal tabulationLF	EQU	10			; Line feedVT	EQU	11			; Vertical tabulationFF	EQU	12			; Form feedCR	EQU	13			; Carriage returnSO	EQU	14			; Shift outSI	EQU	15			; Shift inDLE	EQU	16			; Data link escapeDC1	EQU	17			; Device control 1DC2	EQU	18			; Device control 2DC3	EQU	19			; Device control 3DC4	EQU	20			; Device control 4NAK	EQU	21			; Negative acknowledgeSYN	EQU	22			; Synchronous idleETB	EQU	23			; End of transmission blockCAN	EQU	24			; CancelEM	EQU	25			; End of mediumSUB	EQU	26			; SubstituteESC	EQU	27			; EscapeFS	EQU	28			; File separatorGS	EQU	29			; Group separatorRS	EQU	30			; Record separatorUS	EQU	31			; Unit separator;	Keyboard/Display CharsCURON	EQU	14			; Cursor display onCUROF	EQU	15			; Cursor display offKEY_F1	EQU	81H			; Function key #1KEY_F2	EQU	82H			; Function key #2KEY_F3	EQU	83H			; Function key #3;;	Supervisor Call (SVC) Routines;@IPL	EQU	0			; Initial program load (reboot)@KEY	EQU	1			; Input from keyboard with wait@DSP	EQU	2			; Output to display@GET	EQU	3			; Input a byte from a device@PUT	EQU	4			; Output a byte to a device@CTL	EQU	5			; Output a control byte@PRT	EQU	6			; Output to printer@WHERE	EQU	7			; Resolve relocation address@KBD	EQU	8			; Accept keyboard input@KEYIN	EQU	9			; Line input routine@DSPLY	EQU	10			; Display line handler@LOGER	EQU	11			; Issue a log message@LOGOT	EQU	12			; Display and log a message@MSG	EQU	13			; Message line handler@PRINT	EQU	14			; Printer line handler@VDCTL	EQU	15			; Display control routine@PAUSE	EQU	16			; Suspend program execution@PARAM	EQU	17			; Scan optional parameters@DATE	EQU	18			; Get the date in display code@TIME	EQU	19			; Get the time in display code@CHNIO	EQU	20			; Chain character I/O@ABORT	EQU	21			; Abnormal program exit@EXIT	EQU	22			; Normal program exit;					; 23 is reserved@CMNDI	EQU	24			; Execute command/@EXIT@CMNDR	EQU	25			; Execute command/return@ERROR	EQU	26			; Post an error message@DEBUG	EQU	27			; Enter debugging package@CKTSK	EQU	28			; Check interrupt task@ADTSK	EQU	29			; Add interrupt task@RMTSK	EQU	30			; Remove interrupt task@RPTSK	EQU	31			; Replace interrupt task@KLTSK	EQU	32			; Kill interrupt task@CKDRV	EQU	33			; Check drive/loc dir@DODIR	EQU	34			; Display file directory@RAMDIR EQU	35			; Ram/directory routine;;					; 36 through 39 reserved;@DCSTAT EQU	40			; No operation (check)@SLCT	EQU	41			; Select drive routine@DCINIT EQU	42			; Drive initialization@DCRES	EQU	43			; Clear controller@RSTOR	EQU	44			; Issue fdc restore cmd@STEPI	EQU	45			; Isue fdc step-in cmd@SEEK	EQU	46			; Seek a cylinder@RSLCT	EQU	47			; Test drive busy@RDHDR	EQU	48			; Read sector header info@RDSEC	EQU	49			; Read sector comand@VRSEC	EQU	50			; Verify if sector readable@RDTRK	EQU	51			; Issue fdc cyl read cmd@HDFMT	EQU	52			; Format the device@WRSEC	EQU	53			; Write a sector@WRSSC	EQU	54			; Write a system sector@WRTRK	EQU	55			; Issue fdc cyl write cmd@RENAM	EQU	56			; Rename device/file@REMOV	EQU	57			; Remove a device/file@INIT	EQU	58			; Open or initialize a device/file@OPEN	EQU	59			; Open an existing device/file@CLOSE	EQU	60			; Close a device/file@BKSP	EQU	61			; Backspace logical record@CKEOF	EQU	62			; Check for end-of-file@LOC	EQU	63			; Calc current logical record number@LOF	EQU	64			; Calc eof logical record number@PEOF	EQU	65			; Position to end-of-file@POSN	EQU	66			; Position to logical record@READ	EQU	67			; Read a record from a file@REW	EQU	68			; Rewind a file@RREAD	EQU	69			; Force a sector re-read@RWRIT	EQU	70			; Force a sector re-write@SEEKSC EQU	71			; Position to disk sector@SKIP	EQU	72			; Skip to next logical record@VER	EQU	73			; Write-verify a record to a file@WEOF	EQU	74			; Write an end-of-file mark@WRITE	EQU	75			; Write a record to a file@LOAD	EQU	76			; Load a program file@RUN	EQU	77			; Load and execute a program file@FSPEC	EQU	78			; Fetch a device/file specification@FEXT	EQU	79			; Set up a default file extension@FNAME	EQU	80			; Recover filename/ext@GTDCT	EQU	81			; Get drive table@GTDCB	EQU	82			; Get device block@GTMOD	EQU	83			; Get module;					; 84 is reserved@RDSSC	EQU	85			; Read directory sector@GATRD	EQU	86			; Read GAT from directory@DIRRD	EQU	87			; Read directory for file@DIRWR	EQU	88			; Write directory for file@GATWR	EQU	89			; Write GAT to directory@MUL8	EQU	90			; Single precision multiply@MUL16	EQU	91			; Double precision multiply;					; 92 is reserved@DIV8	EQU	93			; Single precision divide@DIV16	EQU	94			; Double precision divide@HDEC	EQU	95			; @HEXDEC with user length in B (6.3)@DECHEX	EQU	96			; Decimal to binary conversion@HEXDEC	EQU	97			; Binary to decimal conversion@HEX8	EQU	98			; Binary to hex conversion - 8 bit@HEX16	EQU	99			; Binary to hex conversion - 16 bit@HIGH$	EQU	100			; Fetch/set high$ and low$@FLAGS	EQU	101			; Fetch system info@BANK	EQU	102			; Memory manager@BREAK	EQU	103			; Set backround break vector@SOUND	EQU	104			; Sound/beep routine;;	 TRSDOS/LS-DOS 6.2/6.3 Extended SVC'S;@CLS	EQU	105			; Clear video screen@CKBRKC EQU	106			; Check/clear break bit@PRTSCR EQU	107			; Print the screen (6.3);;@EXTMEM EQU	108			; The Extended memory SVC goes here;					; 109 through 127 reserved;;	DOSPLUS Extended SVC'S (from the M-ZAL assembler);	IFDEF	DOSPLUS;@DISKIO EQU	121			; General disk i/o driver@LOCDCT EQU	122			; Locate drive ctl table@LOCDCB EQU	123			; Locate device ctl block@EVAL	EQU	124			; Command line evaluation@WILD	EQU	125			; Wild card parsing@LOCDEV EQU	126			; Locate device by name@SORT	EQU	127			; Sort memory block;	ENDIF;;*LIST ON	END