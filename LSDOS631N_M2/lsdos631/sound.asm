;****************************************************************;* Filename: SOUND/ASM						*;* Rev Date: 30 Nov 97						*;* Revision: 6.3.1						*;****************************************************************;* Misc. lowcore routines					*;*								*;****************************************************************;;	Contains IPL, PAUSE, SOUND, and DECHEX routines;	Will be loaded into lowcore area along with SYSRES;*MOD;--> Model 4	IF	@MOD4;<--SNDPORT EQU	90H;--> Model II	ENDIF	IF	@MOD2SNDPORT EQU	0A0H		;Bell port	ENDIF;<--	ORG	STACK$	DW	00		;Stack guard;;	Pause routine;@PAUSE	PUSH	BC		;Save the count;	SRL	B		;Adjust for wait states;	RR	C	LD	A,(SFLAG$)	;if system in FAST mode	BIT	3,A		;  then double it;--> Model 4	IF	@MOD4;<--	CALL	NZ,CDLOOP	;Call if fast;--> Model II	ENDIF	IF	@MOD2	CALL	CDLOOP		;Call if fast (always)	ENDIF;<--	POP	BC		;Restore the countCDLOOP	DEC	BC		;Count down routine	LD	A,B	OR	C	JR	NZ,CDLOOP	RET;;	@SOUND SVC 104 - Operates sound generator;	 B -> Sound function;	  Bits 0-2 = Note # (0=highest);	  Bits 3-7 = Relative sound duration;	All regs except A left unchanged;	Z flag set on exit;	Note that interrupts disabled during generation;@SOUND	PUSH	BC		;Save registers	PUSH	HL;--> Model II	IF	@MOD2	LD	A,0BH	CALL	@CKTSK		;Routine to see if a task slot active	JR	NZ,L03AD	ENDIF;<--	LD	A,B		;Get sound data;--> Model 4	IF	@MOD4;<--	AND	7		;  just want note #	RLCA			;Adjust for 2 byte fields	LD	HL,SNDTAB	LD	C,A	LD	A,B		;Pick up duration data	LD	B,0		;Index into tone table	ADD	HL,BC		;  to get note on/off	LD	C,(HL)		;Get note on/off data	INC	HL	LD	L,(HL)		;Get note duration;--> Model 4	ENDIF;<--	RRCA			;Rotate sound duration	RRCA			;  into bits 0-4	RRCA	AND	1FH		;Strip off sound #	INC	A		;Adjust for offset;--> Model 4	IF	@MOD4;<--	LD	H,A		;Set sound counter	LD	A,(SFLAG$)	;If fast, double values	AND	8	JR	Z,$?1	SLA	H	SLA	L	SLA	C$?1	DI			;Don't interrupt timing$?2	PUSH	HL		;Save note duration$?3	LD	B,C		;Play tone	LD	A,1		;Hold output high	OUT	(SNDPORT),A	;  for count of B	DJNZ	$	LD	B,C		;Hold output low	INC	A		;  for count of B	OUT	(SNDPORT),A	DJNZ	$	DEC	L		;Dec the duration	JR	NZ,$?3	POP	HL	DEC	H	JR	NZ,$?2	EI	POP	HL;--> Model II	ENDIF	IF	@MOD2	LD	(BELCNT),A	;Number of bells	LD	DE,BELL@	;Bell task vector	LD	A,0BH		;	CALL	@ADTSK		;Add the taskL03AD	POP	HL	ENDIF;<--	POP	BC;--> Model II	IF	@MOD2	XOR	A		;Clear Z flag	ENDIF;<--	RET;--> Model 4	IF	@MOD4;<--;;	Note Table;SNDOFF	EQU	180		;Sound duration offsetTONER	EQU	28SNDTAB	DB	108-TONER	DB	0-SNDOFF	DB	114-TONER	DB	252-SNDOFF	DB	120-TONER	DB	248-SNDOFF	DB	126-TONER	DB	244-SNDOFF	DB	135-TONER	DB	240-SNDOFF	DB	142-TONER	DB	236-SNDOFF	DB	149-TONER	DB	232-SNDOFF	DB	156-TONER	DB	228-SNDOFFSNDLEN	EQU	$-@SOUND;--> Model II	ENDIF	IF	@MOD2;;	Model II Bell taskBELL@	DW	BELL		;Task vectorBELCNT	DB	0		;Number of bellsBELL	LD	A,0FFH		;Do a bell	OUT	(SNDPORT),A	;	DEC	(IX+2)		;Decrement count	RET	NZ		;Ret if not done	LD	A,00H		;Else stop bell	OUT	(SNDPORT),A	;	JP	@KLTSK		;And kill the task	ENDIF;<--;;	Process decimal assignment;@DECHEX LD	BC,0		;Init value to zeroDEC1	LD	A,(HL)		;get a char	SUB	30H	RET	C	CP	10	RET	NC	PUSH	BC	EX	(SP),HL	ADD	HL,HL	ADD	HL,HL	ADD	HL,BC	ADD	HL,HL	LD	B,0	LD	C,A	ADD	HL,BC	LD	B,H	LD	C,L	POP	HL	INC	HL	JR	DEC1;--> Model 4	IF	@MOD4;<--;;	Special boot code to be moved to 4300h by IPL;BOOTCOD DI	XOR	A	OUT	(@OPREG),A	RST	0BOOTLEN EQU	$-BOOTCOD;--> Model 4	ENDIF;<--	END